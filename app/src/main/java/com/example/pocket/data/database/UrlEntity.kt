package com.example.pocket.data.database

import android.net.Uri
import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
import com.example.pocket.data.domain.SavedUrlItem
import java.net.URL

/**
 *The data class that represents an url item in the database.
 * Note:
 * <p>
 *     val fields don't have setters since they are final.Therefore room throws
 *     an exception stating that it cannot find the setter.
 *     Private var's don't expose their default getters and setters generated by kotlin,
 *     blocking Room from accessing them.This also causes an exception.
 *     Therefore we have write a separate function representing the getter and setter.
 *</p>
 */
@Entity(tableName = "SavedUrlItems")
data class UrlEntity(
    val url: String,
    val contentTitle: String,
    val imageAbsolutePath: String?, //thumbnail
    val faviconAbsolutePath: String? = null,
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0
) {

    /*
    Getting the host name from the url and removing the "www" prefix
    host name of the url. Eg.https://www.theVerge.com/ios-14...
    host = theVerge.com
    */

    @ColumnInfo(name = "host")
    private var hostBackingProperty = Uri.parse(url).host?.removePrefix("www.") ?: url

    fun getHostBackingProperty() = hostBackingProperty
    fun setHostBackingProperty(string: String) {
        hostBackingProperty = string
    }

    @Ignore
    val host = hostBackingProperty

}

/**
 * A converter function used to convert an instance of [UrlEntity] to
 * [SavedUrlItem].
 */
fun UrlEntity.toSavedUrlItem() = SavedUrlItem(
    id = id.toString(),
    url = URL(url),
    title = contentTitle,
    imageAbsolutePath = imageAbsolutePath,
    faviconAbsolutePath = faviconAbsolutePath
)

